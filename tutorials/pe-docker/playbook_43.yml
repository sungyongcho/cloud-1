- name: my frist playbook
  hosts: all
  tasks:

  - name: install docker sdk
    apt:
      name: python3-docker
      update_cache: yes
      cache_valid_time: 3600
    become: yes

  # 1.
  # - name: iter_container
  #   docker_container:
  #     name: "n{{ item }}"
  #     image: "nginx:latest"
  #     state: started
  #   with_sequence: count=5


  # 2. remove all containers
  # - name: container list
  #   docker_host_info:
  #     containers: True
  #   register: docker_info

  # - name: remove all containers
  #   docker_container:
  #     name: '{{ item.Names[0] | regex_replace("^/", "") }}'
  #     state: absent
  #   loop: '{{ docker_info.containers }}'

  # 3.
  # - name: to get ip of a container
  #   docker_container:
  #     name: c1
  #     image: nginx:latest
  #     state: started
  #   register: __container_infos

  # - name: print output
  #   debug:
  #     var: __container_infos.container.NetworkSettings.IPAddress

  # 4. check if a container is running
  # - name: test
  #   uri:
  #     url: "http://{{ __container_infos.container.NetworkSettings.Networks.bridge.IPAddress}}"
  #     status_code: 200

  # 5. collect all container ips
  # - name: run
  #   docker_container:
  #     name: "n{{ item }}"
  #     image: nginx:latest
  #     state: started
  #   with_sequence: count=5

  # - name: container list
  #   docker_host_info:
  #     containers: True
  #   register: docker_info

  # - name: collect ips
  #   docker_container_info:
  #     name: '{{ item.Names[0] | regex_replace("^/", "") }}'
  #   register: __container_infos
  #   loop: '{{ docker_info.containers }}'

  # - name: print
  #   debug:
  #     msg: "{{ item.container.NetworkSettings.Networks.bridge.IPAddress }}"
  #   with_items:
  #   - "{{ __container_infos.results }}"

  # 6. docker network info
  # - name: create network sucho
  #   docker_network:
  #     name: sucho

  # - name: Get infos about network
  #   docker_network_info:
  #     name: sucho
  #   register: __network_infos

  # - name: debug
  #   debug:
  #     var: __network_infos

  # 7. docker volume info
  - name: create directory
    file:
      path: /tmp/data
      state: directory

  - name: create a volume
    docker_volume:
      name: sucho_data
      driver: local
      driver_options:
        o: bind
        type: none
        device: /tmp/data

  - name: get info about volume
    docker_volume_info:
      name: sucho_data
    register: __volume_infos

  - name: print
    debug:
      var: __volume_infos
